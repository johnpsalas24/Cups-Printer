
## The real one

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;


server {
    listen 80;
    listen [::]:80;
    server_name  service.clearmdhealth.com
    server_tokens off;
    return 200
}

# Settings for a TLS enabled server.
  server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  service.clearmdhealth.com;
        root         /usr/share/nginx/html;
        ssl_certificate /etc/letsencrypt/live/service.clearmdhealth.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/service.clearmdhealth.com/privkey.pem; # managed by Certbot
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        server_tokens off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
            add_header Content-Type text/html;
            200 <html><body>Hello World</body></html>;
        }
        location /testserver { 
            add
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
       }

  }
}












# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # server {
    #     listen       80;
    #     listen       [::]:80;
    #     server_name  api.results.clearmdhealth.com;
    #     return 301 https://$host$request_uri;
    # }
    
    # server {
    # if ($host = www.staging.api.clearmdhealth.com) {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot


    # if ($host = staging.api.clearmdhealth.com) {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot


        # listen       80;
        # listen       [::]:80;
        # server_name  staging.api.clearmdhealth.com www.staging.api.clearmdhealth.com;
        # return 301 https://$host$request_uri;
    # }
    # server {
    #   if ($host = www.api.clearmdhealth.com) {
    #     return 301 https://$host$request_uri;
    #   } # managed by Certbot


    #   if ($host = api.clearmdhealth.com) {
    #     return 301 https://$host$request_uri;
    #   } # managed by Certbot


    #     listen       80;
    #     listen       [::]:80;
    #     server_name  api.clearmdhealth.com www.api.clearmdhealth.com;
    #     server_tokens off;
    #     return 301 https://$host$request_uri;
    # }
#     server {
#       if ($host = www.mirth.clearmdhealth.com) {
#         return 301 https://$host$request_uri;
#       }


#       if ($host = mirth.clearmdhealth.com) {
#         return 301 https://$host$request_uri;
#       }


#         listen       80;
#         listen       [::]:80;
#         server_name  mirth.clearmdhealth.com www.mirth.clearmdhealth.com;
#         server_tokens off;
#         return 301 https://$host$request_uri;
# }

server {
    if($host = service.clearmdhealth.com){
        return 301 https://$host$request_uri
    }
    if($host = www.service.clearmdhealth.com){ 
        return 301 https://$host$request_uri
    }
    listen 80;
    listen [::]:80;
    server_name  service.clearmdhealth.com
    server_tokens off;
    return 301 https://$host$request_uri;
}
# Settings for a TLS enabled server.
  server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  service.clearmdhealth.com;
        root         /usr/share/nginx/html;
        ssl_certificate /etc/letsencrypt/live/service.clearmdhealth.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/service.clearmdhealth.com/privkey.pem; # managed by Certbot
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        server_tokens off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
            # proxy_pass http://127.0.0.1:5000;
            add_header Content-Type text/html;
            200 <html><body>Hello World</body></html>
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
       }

  }




# Settings for a TLS enabled server.

    server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  api.results.clearmdhealth.com;
        root         /usr/share/nginx/html;
        ssl_certificate /etc/letsencrypt/live/api.results.clearmdhealth.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/api.results.clearmdhealth.com/privkey.pem; # managed by Certbot
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        server_tokens off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
            proxy_pass http://127.0.0.1:5000;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
       }

  }
  server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  staging.api.clearmdhealth.com www.staging.api.clearmdhealth.com;
        root         /usr/share/nginx/html;
        ssl_certificate /etc/letsencrypt/live/staging.api.clearmdhealth.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/staging.api.clearmdhealth.com/privkey.pem; # managed by Certbot
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        server_tokens off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
            proxy_pass http://127.0.0.1:3030;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
       }
   }
   server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  api.clearmdhealth.com www.api.clearmdhealth.com;
        root         /usr/share/nginx/html;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        server_tokens off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
            proxy_pass http://127.0.0.1:3000;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
       }
   
       ssl_certificate /etc/letsencrypt/live/api.clearmdhealth.com/fullchain.pem; # managed by Certbot
       ssl_certificate_key /etc/letsencrypt/live/api.clearmdhealth.com/privkey.pem; # managed by Certbot

   }
   server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  mirth.clearmdhealth.com www.mirth.clearmdhealth.com;
        root         /usr/share/nginx/html;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        server_tokens off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
            proxy_pass https://127.0.0.1:8443;
            proxy_set_header Host $http_host;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
       }
    
    ssl_certificate /etc/letsencrypt/live/mirth.clearmdhealth.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mirth.clearmdhealth.com/privkey.pem; # managed by Certbot

}
}
